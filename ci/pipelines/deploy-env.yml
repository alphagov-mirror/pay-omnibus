---
resource_types:
  - name: cf-cli
    type: docker-image
    source:
      repository: nulldriver/cf-cli-resource

resources:
  - name: omnibus
    type: git
    icon: github-circle
    source:
      uri: https://github.com/alphagov/pay-omnibus
      branch: develop

  - name: paas
    type: cf-cli
    icon: cloud-upload-outline
    source:
      api: https://api.london.cloud.service.gov.uk
      org: govuk-pay
      space: ((space))
      username: ((cf-username))
      password: ((cf-password))

  - &image
    name: adminusers
    type: registry-image
    icon: docker
    source: &image-source
      repository: govukpay/adminusers
      tag: latest-master
      username: ((docker-username))
      password: ((docker-password))

  - <<: *image
    name: cardid
    source:
      <<: *image-source
      repository: govukpay/cardid

  - <<: *image
    name: card-connector
    source:
      <<: *image-source
      repository: govukpay/connector

  - <<: *image
    name: directdebit-connector
    source:
      <<: *image-source
      repository: govukpay/directdebit-connector

  - <<: *image
    name: directdebit-frontend
    source:
      <<: *image-source
      repository: govukpay/directdebit-frontend

  - <<: *image
    name: card-frontend
    source:
      <<: *image-source
      repository: govukpay/frontend

  - <<: *image
    name: ledger
    source:
      <<: *image-source
      repository: govukpay/ledger

  - <<: *image
    name: products
    source:
      <<: *image-source
      repository: govukpay/products

  - <<: *image
    name: products-ui
    source:
      <<: *image-source
      repository: govukpay/products-ui

  - <<: *image
    name: publicapi
    source:
      <<: *image-source
      repository: govukpay/publicapi

  - <<: *image
    name: publicauth
    source:
      <<: *image-source
      repository: govukpay/publicauth

  - <<: *image
    name: selfservice
    source:
      <<: *image-source
      repository: govukpay/selfservice

jobs:
  - name: provision-space
    plan:
      - get: omnibus
        trigger: true
      - task: create-users
        file: omnibus/ci/tasks/create-users.yml
        params:
          SPACE: ((space))
      - put: space
        resource: paas
        params:
          commands:
            - command: create-space
            - command: create-users-from-file
              file: out/users.csv

  - name: delete-space
    plan:
      - put: paas
        params:
          command: delete-space

  - name: deploy-adminusers
    serial_groups: [adminusers, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: adminusers
        trigger: true
      - put: app
        resource: paas
        params: &paas-app
          command: push
          app_name: adminusers
          manifest: omnibus/paas/pay-apps.yml
          no_start: true
          docker_password: ((docker-password))
          vars:
            space: ((space))
            docker-username: ((docker-username))

  - name: deploy-cardid
    serial_groups: [cardid, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: cardid
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: cardid

  - name: deploy-card-connector
    serial_groups: [card-connector, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: card-connector
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: card-connector

  - name: deploy-card-frontend
    serial_groups: [card-frontend, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: card-frontend
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: card-frontend

  - name: deploy-directdebit-connector
    serial_groups: [directdebit-connector, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: directdebit-connector
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: directdebit-connector

  - name: deploy-directdebit-frontend
    serial_groups: [directdebit-frontend, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: directdebit-frontend
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: directdebit-frontend

  - name: deploy-ledger
    serial_groups: [ledger, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: ledger
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: ledger

  - name: deploy-products
    serial_groups: [products, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: products
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: products

  - name: deploy-products-ui
    serial_groups: [products-ui, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: products-ui
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: products-ui

  - name: deploy-publicapi
    serial_groups: [publicapi, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: publicapi
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: publicapi

  - name: deploy-publicauth
    serial_groups: [publicauth, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: publicauth
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: publicauth

  - name: deploy-selfservice
    serial_groups: [selfservice, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: selfservice
        trigger: true
      - put: app
        resource: paas
        params:
          <<: *paas-app
          app_name: selfservice

  - name: deploy-tools
    serial_groups: [tools, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - put: egress
        resource: paas
        params:
          <<: *paas-app
          app_name: egress
      - put: sqs
        resource: paas
        params:
          <<: *paas-app
          app_name: sqs
      - put: postgres
        resource: paas
        params:
          <<: *paas-app
          app_name: postgres

  - name: adminusers-network-policies
    plan:
      - get: omnibus
        passed: [deploy-adminusers, deploy-tools]
        trigger: true
      - put: network-policy-egress
        resource: paas
        params:
          command: add-network-policy
          source_app: adminusers
          destination_app: egress
          port: 8080
          protocol: tcp
      - put: network-policy-postgres
        resource: paas
        params:
          command: add-network-policy
          source_app: adminusers
          destination_app: postgres
          port: 5432
          protocol: tcp

  - name: card-connector-network-policies
    plan:
      - get: omnibus
        passed: [deploy-card-connector, deploy-tools]
        trigger: true
      - put: network-policy-egress
        resource: paas
        params:
          command: add-network-policy
          source_app: card-connector
          destination_app: egress
          port: 8080
          protocol: tcp
      - put: network-policy-postgres
        resource: paas
        params:
          command: add-network-policy
          source_app: card-connector
          destination_app: postgres
          port: 5432
          protocol: tcp
      - put: network-policy-sqs
        resource: paas
        params:
          command: add-network-policy
          source_app: card-connector
          destination_app: sqs
          port: 9324
          protocol: tcp

  - name: directdebit-frontend-network-policies
    plan:
      - get: omnibus
        passed: [deploy-directdebit-frontend, deploy-directdebit-connector]
        trigger: true
      - put: network-policy-egress
        resource: paas
        params:
          command: add-network-policy
          source_app: directdebit-frontend
          destination_app: directdebit-connector
          port: 8080
          protocol: tcp
      - put: network-policy-egress
        resource: paas
        params:
          command: add-network-policy
          source_app: directdebit-frontend
          destination_app: adminusers
          port: 8080
          protocol: tcp

  - name: directdebit-connector-network-policies
    plan:
      - get: omnibus
        passed: [deploy-directdebit-connector, deploy-tools]
        trigger: true
      - put: network-policy-egress
        resource: paas
        params:
          command: add-network-policy
          source_app: directdebit-connector
          destination_app: egress
          port: 8080
          protocol: tcp
      - put: network-policy-postgres
        resource: paas
        params:
          command: add-network-policy
          source_app: directdebit-connector
          destination_app: postgres
          port: 5432
          protocol: tcp

  - name: card-frontend-network-policies
    plan:
      - get: omnibus
        passed: [deploy-card-frontend, deploy-card-connector, deploy-cardid, deploy-adminusers]
        trigger: true
      - put: network-policy-card-connector
        resource: paas
        params:
          command: add-network-policy
          source_app: card-frontend
          destination_app: card-connector
          port: 8080
          protocol: tcp
      - put: network-policy-cardid
        resource: paas
        params:
          command: add-network-policy
          source_app: card-frontend
          destination_app: cardid
          port: 8080
          protocol: tcp
      - put: network-policy-adminusers
        resource: paas
        params:
          command: add-network-policy
          source_app: card-frontend
          destination_app: adminusers
          port: 8080
          protocol: tcp

  - name: publicauth-network-policies
    plan:
      - get: omnibus
        passed: [deploy-publicauth, deploy-tools]
        trigger: true
      - put: network-policy-postgres
        resource: paas
        params:
          command: add-network-policy
          source_app: publicauth
          destination_app: postgres
          port: 5432
          protocol: tcp

  - name: products-network-policies
    plan:
      - get: omnibus
        passed: [deploy-products, deploy-tools]
        trigger: true
      - put: network-policy-postgres
        resource: paas
        params:
          command: add-network-policy
          source_app: products
          destination_app: postgres
          port: 5432
          protocol: tcp

  - name: ledger-network-policies
    plan:
      - get: omnibus
        passed: [deploy-ledger, deploy-tools]
        trigger: true
      - put: network-policy-postgres
        resource: paas
        params:
          command: add-network-policy
          source_app: ledger
          destination_app: postgres
          port: 5432
          protocol: tcp
      - put: network-policy-sqs
        resource: paas
        params:
          command: add-network-policy
          source_app: ledger
          destination_app: sqs
          port: 9324
          protocol: tcp

  - name: start-adminusers
    plan:
      - get: omnibus
        passed: [deploy-adminusers, adminusers-network-policies]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: adminusers

  - name: start-cardid
    plan:
      - get: omnibus
        passed: [deploy-cardid]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: cardid

  - name: start-card-connector
    plan:
      - get: omnibus
        passed: [deploy-card-connector, card-connector-network-policies]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: card-connector

  - name: start-card-frontend
    plan:
      - get: omnibus
        passed: [deploy-card-frontend, card-frontend-network-policies]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: card-frontend

  - name: start-directdebit-connector
    plan:
      - get: omnibus
        passed: [deploy-directdebit-connector, directdebit-connector-network-policies]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: directdebit-connector

  - name: start-directdebit-frontend
    plan:
      - get: omnibus
        passed: [deploy-directdebit-frontend, directdebit-frontend-network-policies]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: directdebit-frontend

  - name: start-ledger
    plan:
      - get: omnibus
        passed: [deploy-ledger, ledger-network-policies]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: ledger

  - name: start-products
    plan:
      - get: omnibus
        passed: [deploy-products, products-network-policies]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: products

  - name: start-products-ui
    plan:
      - get: omnibus
        passed: [deploy-products-ui]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: products-ui

  - name: start-publicapi
    plan:
      - get: omnibus
        passed: [deploy-publicapi]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: publicapi

  - name: start-publicauth
    plan:
      - get: omnibus
        passed: [deploy-publicauth, publicauth-network-policies]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: publicauth

  - name: start-selfservice
    plan:
      - get: omnibus
        passed: [deploy-selfservice]
        trigger: true
      - put: start-app
        resource: paas
        params:
          command: start
          app_name: selfservice

  - name: start-tools
    plan:
      - get: omnibus
        passed: [deploy-tools]
        trigger: true
      - put: start-egress
        resource: paas
        params:
          command: start
          app_name: egress
      - put: start-sqs
        resource: paas
        params:
          command: start
          app_name: sqs
      - put: start-postgres
        resource: paas
        params:
          command: start
          app_name: postgres

