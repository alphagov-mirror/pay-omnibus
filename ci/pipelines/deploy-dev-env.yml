---
resource_types:
  - name: cf-cli
    type: docker-image
    source:
      repository: nulldriver/cf-cli-resource

resources:
  - name: omnibus
    type: git
    source:
      uri: https://github.com/alphagov/pay-omnibus
      branch: develop

  - &paas-resource
    name: paas
    type: cf-cli
    source:
      api: https://api.london.cloud.service.gov.uk
      org: govuk-pay
      space: dev-((developer))
      username: ((cf-username))
      password: ((cf-password))

  - name: pay-adminusers
    type: git
    source: &git-source
      uri: https://github.com/alphagov/pay-adminusers
      branch: master
      username: ((gh-username))
      password: ((gh-password))

  #- name: pay-cardid
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-cardid"

  #- name: pay-cardid-data
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-cardid-data"

  #- name: pay-connector
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-connector"

  #- name: pay-direct-debit-connector
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-direct-debit-connector"

  #- name: pay-direct-debit-frontend
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-direct-debit-frontend" 

  - name: pay-frontend
    type: git
    source:
      <<: *git-source
      uri: "https://github.com/alphagov/pay-frontend" 

  #- name: pay-ledger
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-ledger" 

  #- name: pay-products
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-products" 

  #- name: pay-products-ui
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-products-ui" 

  #- name: pay-publicapi
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-publicapi" 

  #- name: pay-publicauth
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-publicauth" 

  #- name: pay-selfservice
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-selfservice" 

  #- name: pay-toolbox
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-toolbox" 

  #- name: pay-demo-service
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-demo-service" 

  #- name: pay-endtoend
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-endtoend" 

  #- name: pay-stubs
  #  type: git
  #  source:
  #    <<: *git-source
  #    uri: "https://github.com/alphagov/pay-stubs" 

jobs:
  - name: provision-space
    plan:
      - get: omnibus
        trigger: true
      - task: create-users
        file: omnibus/ci/tasks/create-users.yml
        params:
          SPACE: dev-((developer))
          USER: ((user))
      - put: space
        resource: paas
        params:
          commands:
            - command: create-space
            - command: create-users-from-file
              file: out/users.csv

  - name: deploy-adminusers
    serial_groups: [adminusers, michaelangelo]
    plan:
      - get: omnibus
        passed: [provision-space]
        trigger: true
      - get: pay-adminusers
        trigger: true
      - task: build
        file: omnibus/ci/tasks/maven-build.yaml
        input_mapping: { src: pay-adminusers }
      - put: app
        resource: paas
        params:
          command: push
          app_name: admin-users
          manifest: omnibus/paas/pay-apps.yml
          no_start: true

  #- name: deploy-cardid
  #  serial_groups: [cardid, leonardo]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-cardid
  #      trigger: true
  #      params:
  #        submodules: none
  #    - get: pay-cardid-data
  #      trigger: true
  #    - task: copy-cardid-data
  #      file: omnibus/ci/tasks/copy-cardid-data.yaml
  #    - task: build
  #      file: omnibus/ci/tasks/maven-build.yaml
  #      input_mapping: { src: pay-cardid }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: card-id
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  - name: deploy-frontend
    serial_groups: [frontend, leonardo]
    plan:
      - get: omnibus
      - get: paas
        passed: [provision-space]
        trigger: true
      - get: pay-frontend
        trigger: true
      - task: test
        file: omnibus/ci/tasks/frontend.yaml
        input_mapping: { src: pay-frontend }
      - put: paas
        params:
          command: push
          app_name: frontend
          manifest: omnibus/paas/pay-apps.yml
          no_start: true

  #- name: deploy-toolbox
  #  serial_groups: [toolbox, leonardo]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-toolbox
  #      trigger: true
  #    - task: env-file
  #      config:
  #        platform: linux
  #        image_resource:
  #          type: docker-image
  #          source: { repository: node }
  #        inputs:
  #          - name: pay-toolbox
  #        outputs:
  #          - name: pay-toolbox
  #        run:
  #          path: bash
  #          dir: pay-toolbox
  #          args: [ "./scripts/generate-dev-environment" ]
  #    - task: test
  #      file: omnibus/ci/tasks/node-test.yaml
  #      input_mapping: { src: pay-toolbox }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: toolbox
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-connector
  #  serial_groups: [connector, michaelangelo]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-connector
  #      trigger: true
  #    - task: build
  #      file: omnibus/ci/tasks/maven-build.yaml
  #      input_mapping: { src: pay-connector }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: connector
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-ledger
  #  serial_groups: [ledger, michaelangelo]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-ledger
  #      trigger: true
  #    - task: build
  #      file: omnibus/ci/tasks/maven-build.yaml
  #      input_mapping: { src: pay-ledger }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: ledger
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-products
  #  serial_groups: [products, donatello]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-products
  #      trigger: true
  #    - task: build
  #      file: omnibus/ci/tasks/maven-build.yaml
  #      input_mapping: { src: pay-products }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: products
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-products-ui
  #  serial_groups: [products-ui, donatello]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-products-ui
  #      trigger: true
  #    - task: test
  #      file: omnibus/ci/tasks/frontend.yaml
  #      input_mapping: { src: pay-products-ui }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: products-ui
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-selfservice
  #  serial_groups: [selfservice, donatello]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-selfservice
  #      trigger: true
  #    - task: test
  #      file: omnibus/ci/tasks/frontend.yaml
  #      input_mapping: { src: pay-selfservice }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: self-service
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-publicauth
  #  serial_groups: [publicauth, raphael]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-publicauth
  #      trigger: true
  #    - task: build
  #      file: omnibus/ci/tasks/maven-build.yaml
  #      input_mapping: { src: pay-publicauth }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: public-auth
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-publicapi
  #  serial_groups: [publicapi, raphael]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-publicapi
  #      trigger: true
  #    - task: build
  #      file: omnibus/ci/tasks/maven-build.yaml
  #      input_mapping: { src: pay-publicapi }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: public-api
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-dd-connector
  #  serial_groups: [dd-connector, raphael]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-direct-debit-connector
  #      trigger: true
  #    - task: build
  #      file: omnibus/ci/tasks/maven-build.yaml
  #      input_mapping: { src: pay-direct-debit-connector }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: direct-debit-connector
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: deploy-dd-frontend
  #  serial_groups: [dd-frontend, raphael]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-direct-debit-frontend
  #      trigger: true
  #    - task: test
  #      file: omnibus/ci/tasks/frontend.yaml
  #      input_mapping: { src: pay-direct-debit-frontend }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: direct-debit-frontend
  #        manifest: omnibus/paas/pay-apps.yml
  #        no_start: true

  #- name: build-endtoend
  #  serial_groups: [endtoend]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-endtoend
  #      trigger: true
  #    - task: build
  #      file: omnibus/ci/tasks/maven-build.yaml
  #      input_mapping: { src: pay-endtoend }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: end-to-end
  #        manifest: omnibus/paas/test-apps.yml
  #        no_start: true

  #- name: build-stubs
  #  serial_groups: [stubs]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-stubs
  #      trigger: true
  #    - task: test
  #      file: omnibus/ci/tasks/node-test.yaml
  #      input_mapping: { src: pay-stubs }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: stubs
  #        manifest: omnibus/paas/test-apps.yml
  #        no_start: true

  #- name: build-demo-service
  #  serial_groups: [demo-service]
  #  plan:
  #    - get: omnibus
  #    - get: paas
  #      passed: [provision-space]
  #      trigger: true
  #    - get: pay-demo-service
  #      trigger: true
  #    - task: test
  #      file: omnibus/ci/tasks/node-test.yaml
  #      input_mapping: { src: pay-demo-service }
  #    - put: paas
  #      params:
  #        command: push
  #        app_name: demo-service
  #        manifest: omnibus/paas/test-apps.yml
  #        no_start: true
